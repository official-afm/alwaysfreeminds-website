{"ast":null,"code":"import { ref, reactive } from 'vue';\nexport default {\n  name: 'Contact',\n  setup() {\n    const form = reactive({\n      name: '',\n      email: '',\n      subject: '',\n      message: ''\n    });\n    const errors = reactive({});\n    const submitting = ref(false);\n    const submitted = ref(false);\n    const validateForm = () => {\n      const newErrors = {};\n      if (!form.name.trim()) {\n        newErrors.name = 'Name is required';\n      }\n      if (!form.email.trim()) {\n        newErrors.email = 'Email is required';\n      } else if (!/\\S+@\\S+\\.\\S+/.test(form.email)) {\n        newErrors.email = 'Please enter a valid email';\n      }\n      if (!form.subject) {\n        newErrors.subject = 'Please select a subject';\n      }\n      if (!form.message.trim()) {\n        newErrors.message = 'Message is required';\n      } else if (form.message.trim().length < 10) {\n        newErrors.message = 'Please provide more details (at least 10 characters)';\n      }\n      Object.keys(errors).forEach(key => {\n        delete errors[key];\n      });\n      Object.assign(errors, newErrors);\n      return Object.keys(newErrors).length === 0;\n    };\n    const submitForm = async () => {\n      if (!validateForm()) {\n        return;\n      }\n      submitting.value = true;\n      try {\n        // Replace with actual API call\n        console.log('Form submission:', form);\n\n        // Simulate API call\n        await new Promise(resolve => setTimeout(resolve, 1000));\n        submitted.value = true;\n\n        // Reset form\n        Object.keys(form).forEach(key => {\n          form[key] = '';\n        });\n\n        // Hide success message after 5 seconds\n        setTimeout(() => {\n          submitted.value = false;\n        }, 5000);\n      } catch (error) {\n        console.error('Form submission error:', error);\n        // Handle error (show error message)\n      } finally {\n        submitting.value = false;\n      }\n    };\n    return {\n      form,\n      errors,\n      submitting,\n      submitted,\n      submitForm\n    };\n  }\n};","map":{"version":3,"names":["ref","reactive","name","setup","form","email","subject","message","errors","submitting","submitted","validateForm","newErrors","trim","test","length","Object","keys","forEach","key","assign","submitForm","value","console","log","Promise","resolve","setTimeout","error"],"sources":["/home/gregorybarber/buy-mind-insights/src/views/Contact.vue"],"sourcesContent":["<template>\n  <div>\n    <!-- Hero Section -->\n    <section class=\"bg-gradient-to-br from-primary-900 via-primary-800 to-primary-600 text-white py-16\">\n      <div class=\"max-w-4xl mx-auto px-4 sm:px-6 lg:px-8 text-center\">\n        <h1 class=\"text-4xl md:text-5xl font-bold mb-6\">Let's Connect</h1>\n        <p class=\"text-xl text-gray-200\">\n          Ready to start a conversation? I'd love to hear from you.\n        </p>\n      </div>\n    </section>\n\n    <!-- Contact Form Section -->\n    <section class=\"py-16 bg-white\">\n      <div class=\"max-w-4xl mx-auto px-4 sm:px-6 lg:px-8\">\n        <div class=\"grid md:grid-cols-2 gap-12\">\n          <!-- Contact Form -->\n          <div>\n            <h2 class=\"text-3xl font-bold text-gray-900 mb-6\">Send Me a Message</h2>\n            <form @submit.prevent=\"submitForm\" class=\"space-y-6\">\n              <!-- Name -->\n              <div>\n                <label for=\"name\" class=\"block text-sm font-medium text-gray-700 mb-2\">\n                  Full Name *\n                </label>\n                <input\n                  id=\"name\"\n                  v-model=\"form.name\"\n                  type=\"text\"\n                  required\n                  class=\"w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-primary-500 focus:border-transparent transition-colors duration-200\"\n                  :class=\"{ 'border-red-500': errors.name }\"\n                >\n                <p v-if=\"errors.name\" class=\"mt-1 text-sm text-red-600\">{{ errors.name }}</p>\n              </div>\n\n              <!-- Email -->\n              <div>\n                <label for=\"email\" class=\"block text-sm font-medium text-gray-700 mb-2\">\n                  Email Address *\n                </label>\n                <input\n                  id=\"email\"\n                  v-model=\"form.email\"\n                  type=\"email\"\n                  required\n                  class=\"w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-primary-500 focus:border-transparent transition-colors duration-200\"\n                  :class=\"{ 'border-red-500': errors.email }\"\n                >\n                <p v-if=\"errors.email\" class=\"mt-1 text-sm text-red-600\">{{ errors.email }}</p>\n              </div>\n\n              <!-- Subject -->\n              <div>\n                <label for=\"subject\" class=\"block text-sm font-medium text-gray-700 mb-2\">\n                  Subject *\n                </label>\n                <select\n                  id=\"subject\"\n                  v-model=\"form.subject\"\n                  required\n                  class=\"w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-primary-500 focus:border-transparent transition-colors duration-200\"\n                  :class=\"{ 'border-red-500': errors.subject }\"\n                >\n                  <option value=\"\">Select a topic...</option>\n                  <option value=\"consulting\">Consulting Services</option>\n                  <option value=\"speaking\">Speaking Engagement</option>\n                  <option value=\"collaboration\">Collaboration Opportunity</option>\n                  <option value=\"media\">Media Interview</option>\n                  <option value=\"support\">General Support</option>\n                  <option value=\"other\">Other</option>\n                </select>\n                <p v-if=\"errors.subject\" class=\"mt-1 text-sm text-red-600\">{{ errors.subject }}</p>\n              </div>\n\n              <!-- Message -->\n              <div>\n                <label for=\"message\" class=\"block text-sm font-medium text-gray-700 mb-2\">\n                  Message *\n                </label>\n                <textarea\n                  id=\"message\"\n                  v-model=\"form.message\"\n                  required\n                  rows=\"5\"\n                  class=\"w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-primary-500 focus:border-transparent transition-colors duration-200\"\n                  :class=\"{ 'border-red-500': errors.message }\"\n                  placeholder=\"Tell me about your situation, what you're looking for, or how I can help...\"\n                ></textarea>\n                <p v-if=\"errors.message\" class=\"mt-1 text-sm text-red-600\">{{ errors.message }}</p>\n              </div>\n\n              <!-- Submit Button -->\n              <button\n                type=\"submit\"\n                :disabled=\"submitting\"\n                class=\"w-full bg-primary-600 text-white px-6 py-3 rounded-lg font-semibold hover:bg-primary-700 focus:outline-none focus:ring-2 focus:ring-primary-500 focus:ring-offset-2 transition-colors duration-200 disabled:opacity-50 disabled:cursor-not-allowed\"\n              >\n                <span v-if=\"submitting\" class=\"flex items-center justify-center\">\n                  <svg class=\"animate-spin -ml-1 mr-3 h-5 w-5 text-white\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\">\n                    <circle class=\"opacity-25\" cx=\"12\" cy=\"12\" r=\"10\" stroke=\"currentColor\" stroke-width=\"4\"></circle>\n                    <path class=\"opacity-75\" fill=\"currentColor\" d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"></path>\n                  </svg>\n                  Sending...\n                </span>\n                <span v-else>Send Message</span>\n              </button>\n\n              <!-- Success Message -->\n              <div v-if=\"submitted\" class=\"p-4 bg-green-50 border border-green-200 rounded-lg\">\n                <div class=\"flex\">\n                  <svg class=\"w-5 h-5 text-green-400\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\n                    <path fill-rule=\"evenodd\" d=\"M10 18a8 8 0 100-16 8 8 0 000 16zm3.707-9.293a1 1 0 00-1.414-1.414L9 10.586 7.707 9.293a1 1 0 00-1.414 1.414l2 2a1 1 0 001.414 0l4-4z\" clip-rule=\"evenodd\"></path>\n                  </svg>\n                  <div class=\"ml-3\">\n                    <p class=\"text-sm text-green-700\">\n                      Thank you for your message! I'll get back to you within 24-48 hours.\n                    </p>\n                  </div>\n                </div>\n              </div>\n            </form>\n          </div>\n\n          <!-- Contact Information -->\n          <div>\n            <h2 class=\"text-3xl font-bold text-gray-900 mb-6\">Other Ways to Connect</h2>\n            \n            <!-- Contact Cards -->\n            <div class=\"space-y-6\">\n              <!-- Email -->\n              <div class=\"bg-gray-50 p-6 rounded-lg\">\n                <div class=\"flex items-center space-x-3 mb-2\">\n                  <svg class=\"w-6 h-6 text-primary-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                    <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M3 8l7.89 4.26a2 2 0 002.22 0L21 8M5 19h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v10a2 2 0 002 2z\"></path>\n                  </svg>\n                  <h3 class=\"text-lg font-semibold text-gray-900\">Email</h3>\n                </div>\n                <p class=\"text-gray-600 mb-2\">For detailed inquiries and professional matters</p>\n                <a href=\"mailto:contact@buymindinsights.com\" class=\"text-primary-600 font-medium hover:text-primary-700\">\n                  contact@buymindinsights.com\n                </a>\n              </div>\n\n              <!-- LinkedIn -->\n              <div class=\"bg-gray-50 p-6 rounded-lg\">\n                <div class=\"flex items-center space-x-3 mb-2\">\n                  <svg class=\"w-6 h-6 text-primary-600\" fill=\"currentColor\" viewBox=\"0 0 24 24\">\n                    <path d=\"M20.447 20.452h-3.554v-5.569c0-1.328-.027-3.037-1.852-3.037-1.853 0-2.136 1.445-2.136 2.939v5.667H9.351V9h3.414v1.561h.046c.477-.9 1.637-1.85 3.37-1.85 3.601 0 4.267 2.37 4.267 5.455v6.286zM5.337 7.433c-1.144 0-2.063-.926-2.063-2.065 0-1.138.92-2.063 2.063-2.063 1.14 0 2.064.925 2.064 2.063 0 1.139-.925 2.065-2.064 2.065zm1.782 13.019H3.555V9h3.564v11.452zM22.225 0H1.771C.792 0 0 .774 0 1.729v20.542C0 23.227.792 24 1.771 24h20.451C23.2 24 24 23.227 24 22.271V1.729C24 .774 23.2 0 22.222 0h.003z\"/>\n                  </svg>\n                  <h3 class=\"text-lg font-semibold text-gray-900\">LinkedIn</h3>\n                </div>\n                <p class=\"text-gray-600 mb-2\">Connect for professional networking and updates</p>\n                <a href=\"#\" class=\"text-primary-600 font-medium hover:text-primary-700\">\n                  Connect with me\n                </a>\n              </div>\n\n              <!-- Response Time -->\n              <div class=\"bg-primary-50 p-6 rounded-lg\">\n                <div class=\"flex items-center space-x-3 mb-2\">\n                  <svg class=\"w-6 h-6 text-primary-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                    <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M12 8v4l3 3m6-3a9 9 0 11-18 0 9 9 0 0118 0z\"></path>\n                  </svg>\n                  <h3 class=\"text-lg font-semibold text-gray-900\">Response Time</h3>\n                </div>\n                <p class=\"text-gray-600\">\n                  I typically respond within 24-48 hours. For urgent matters, please mention \n                  it in your subject line.\n                </p>\n              </div>\n            </div>\n\n            <!-- FAQ Link -->\n            <div class=\"mt-8 p-6 bg-gray-100 rounded-lg\">\n              <h3 class=\"text-lg font-semibold text-gray-900 mb-2\">Frequently Asked Questions</h3>\n              <p class=\"text-gray-600 mb-4\">\n                Before reaching out, you might find answers to common questions about consulting \n                services, speaking engagements, and collaboration opportunities.\n              </p>\n              <router-link to=\"/faq\" class=\"text-primary-600 font-medium hover:text-primary-700\">\n                View FAQ →\n              </router-link>\n            </div>\n          </div>\n        </div>\n      </div>\n    </section>\n\n    <!-- Trust Indicators -->\n    <section class=\"py-16 bg-gray-50\">\n      <div class=\"max-w-4xl mx-auto px-4 sm:px-6 lg:px-8 text-center\">\n        <h2 class=\"text-2xl font-bold text-gray-900 mb-8\">Why People Trust BuyMindInsights</h2>\n        <div class=\"grid md:grid-cols-3 gap-8\">\n          <div class=\"text-center\">\n            <div class=\"text-3xl font-bold text-primary-600 mb-2\">100%</div>\n            <div class=\"text-gray-600\">Authentic experiences</div>\n          </div>\n          <div class=\"text-center\">\n            <div class=\"text-3xl font-bold text-primary-600 mb-2\">24-48h</div>\n            <div class=\"text-gray-600\">Response time</div>\n          </div>\n          <div class=\"text-center\">\n            <div class=\"text-3xl font-bold text-primary-600 mb-2\">4+ Years</div>\n            <div class=\"text-gray-600\">Lived experience</div>\n          </div>\n        </div>\n      </div>\n    </section>\n  </div>\n</template>\n\n<script>\nimport { ref, reactive } from 'vue'\n\nexport default {\n  name: 'Contact',\n  setup() {\n    const form = reactive({\n      name: '',\n      email: '',\n      subject: '',\n      message: ''\n    })\n\n    const errors = reactive({})\n    const submitting = ref(false)\n    const submitted = ref(false)\n\n    const validateForm = () => {\n      const newErrors = {}\n\n      if (!form.name.trim()) {\n        newErrors.name = 'Name is required'\n      }\n\n      if (!form.email.trim()) {\n        newErrors.email = 'Email is required'\n      } else if (!/\\S+@\\S+\\.\\S+/.test(form.email)) {\n        newErrors.email = 'Please enter a valid email'\n      }\n\n      if (!form.subject) {\n        newErrors.subject = 'Please select a subject'\n      }\n\n      if (!form.message.trim()) {\n        newErrors.message = 'Message is required'\n      } else if (form.message.trim().length < 10) {\n        newErrors.message = 'Please provide more details (at least 10 characters)'\n      }\n\n      Object.keys(errors).forEach(key => {\n        delete errors[key]\n      })\n      Object.assign(errors, newErrors)\n\n      return Object.keys(newErrors).length === 0\n    }\n\n    const submitForm = async () => {\n      if (!validateForm()) {\n        return\n      }\n\n      submitting.value = true\n\n      try {\n        // Replace with actual API call\n        console.log('Form submission:', form)\n        \n        // Simulate API call\n        await new Promise(resolve => setTimeout(resolve, 1000))\n        \n        submitted.value = true\n        \n        // Reset form\n        Object.keys(form).forEach(key => {\n          form[key] = ''\n        })\n        \n        // Hide success message after 5 seconds\n        setTimeout(() => {\n          submitted.value = false\n        }, 5000)\n        \n      } catch (error) {\n        console.error('Form submission error:', error)\n        // Handle error (show error message)\n      } finally {\n        submitting.value = false\n      }\n    }\n\n    return {\n      form,\n      errors,\n      submitting,\n      submitted,\n      submitForm\n    }\n  }\n}\n</script>"],"mappings":"AAqNA,SAASA,GAAG,EAAEC,QAAO,QAAS,KAAI;AAElC,eAAe;EACbC,IAAI,EAAE,SAAS;EACfC,KAAKA,CAAA,EAAG;IACN,MAAMC,IAAG,GAAIH,QAAQ,CAAC;MACpBC,IAAI,EAAE,EAAE;MACRG,KAAK,EAAE,EAAE;MACTC,OAAO,EAAE,EAAE;MACXC,OAAO,EAAE;IACX,CAAC;IAED,MAAMC,MAAK,GAAIP,QAAQ,CAAC,CAAC,CAAC;IAC1B,MAAMQ,UAAS,GAAIT,GAAG,CAAC,KAAK;IAC5B,MAAMU,SAAQ,GAAIV,GAAG,CAAC,KAAK;IAE3B,MAAMW,YAAW,GAAIA,CAAA,KAAM;MACzB,MAAMC,SAAQ,GAAI,CAAC;MAEnB,IAAI,CAACR,IAAI,CAACF,IAAI,CAACW,IAAI,CAAC,CAAC,EAAE;QACrBD,SAAS,CAACV,IAAG,GAAI,kBAAiB;MACpC;MAEA,IAAI,CAACE,IAAI,CAACC,KAAK,CAACQ,IAAI,CAAC,CAAC,EAAE;QACtBD,SAAS,CAACP,KAAI,GAAI,mBAAkB;MACtC,OAAO,IAAI,CAAC,cAAc,CAACS,IAAI,CAACV,IAAI,CAACC,KAAK,CAAC,EAAE;QAC3CO,SAAS,CAACP,KAAI,GAAI,4BAA2B;MAC/C;MAEA,IAAI,CAACD,IAAI,CAACE,OAAO,EAAE;QACjBM,SAAS,CAACN,OAAM,GAAI,yBAAwB;MAC9C;MAEA,IAAI,CAACF,IAAI,CAACG,OAAO,CAACM,IAAI,CAAC,CAAC,EAAE;QACxBD,SAAS,CAACL,OAAM,GAAI,qBAAoB;MAC1C,OAAO,IAAIH,IAAI,CAACG,OAAO,CAACM,IAAI,CAAC,CAAC,CAACE,MAAK,GAAI,EAAE,EAAE;QAC1CH,SAAS,CAACL,OAAM,GAAI,sDAAqD;MAC3E;MAEAS,MAAM,CAACC,IAAI,CAACT,MAAM,CAAC,CAACU,OAAO,CAACC,GAAE,IAAK;QACjC,OAAOX,MAAM,CAACW,GAAG;MACnB,CAAC;MACDH,MAAM,CAACI,MAAM,CAACZ,MAAM,EAAEI,SAAS;MAE/B,OAAOI,MAAM,CAACC,IAAI,CAACL,SAAS,CAAC,CAACG,MAAK,KAAM;IAC3C;IAEA,MAAMM,UAAS,GAAI,MAAAA,CAAA,KAAY;MAC7B,IAAI,CAACV,YAAY,CAAC,CAAC,EAAE;QACnB;MACF;MAEAF,UAAU,CAACa,KAAI,GAAI,IAAG;MAEtB,IAAI;QACF;QACAC,OAAO,CAACC,GAAG,CAAC,kBAAkB,EAAEpB,IAAI;;QAEpC;QACA,MAAM,IAAIqB,OAAO,CAACC,OAAM,IAAKC,UAAU,CAACD,OAAO,EAAE,IAAI,CAAC;QAEtDhB,SAAS,CAACY,KAAI,GAAI,IAAG;;QAErB;QACAN,MAAM,CAACC,IAAI,CAACb,IAAI,CAAC,CAACc,OAAO,CAACC,GAAE,IAAK;UAC/Bf,IAAI,CAACe,GAAG,IAAI,EAAC;QACf,CAAC;;QAED;QACAQ,UAAU,CAAC,MAAM;UACfjB,SAAS,CAACY,KAAI,GAAI,KAAI;QACxB,CAAC,EAAE,IAAI;MAET,EAAE,OAAOM,KAAK,EAAE;QACdL,OAAO,CAACK,KAAK,CAAC,wBAAwB,EAAEA,KAAK;QAC7C;MACF,UAAU;QACRnB,UAAU,CAACa,KAAI,GAAI,KAAI;MACzB;IACF;IAEA,OAAO;MACLlB,IAAI;MACJI,MAAM;MACNC,UAAU;MACVC,SAAS;MACTW;IACF;EACF;AACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}