{"ast":null,"code":"import { createRouter, createWebHistory } from 'vue-router';\nimport Home from '../views/Home.vue';\nconst routes = [{\n  path: '/',\n  name: 'Home',\n  component: Home,\n  meta: {\n    title: 'AlwaysFreeMinds - Stories of Resilience & Redemption'\n  }\n}, {\n  path: '/blog',\n  name: 'Blog',\n  component: () => import('../views/Blog.vue'),\n  meta: {\n    title: 'Blog - AlwaysFreeMinds'\n  }\n}, {\n  path: '/blog/:slug',\n  name: 'BlogPost',\n  component: () => import('../views/BlogPost.vue'),\n  meta: {\n    title: 'Blog Post - AlwaysFreeMinds'\n  }\n}, {\n  path: '/books',\n  name: 'Books',\n  component: () => import('../views/Books.vue'),\n  meta: {\n    title: 'Books - AlwaysFreeMinds'\n  }\n}, {\n  path: '/consulting',\n  name: 'Consulting',\n  component: () => import('../views/Consulting.vue'),\n  meta: {\n    title: 'Consulting - AlwaysFreeMinds'\n  }\n}, {\n  path: '/about',\n  name: 'About',\n  component: () => import('../views/About.vue'),\n  meta: {\n    title: 'About - AlwaysFreeMinds'\n  }\n}, {\n  path: '/contact',\n  name: 'Contact',\n  component: () => import('../views/Contact.vue'),\n  meta: {\n    title: 'Contact - AlwaysFreeMinds'\n  }\n}, {\n  path: '/:pathMatch(.*)*',\n  name: 'NotFound',\n  component: () => import('../views/NotFound.vue'),\n  meta: {\n    title: 'Page Not Found - AlwaysFreeMinds'\n  }\n}];\nconst router = createRouter({\n  history: createWebHistory(process.env.BASE_URL),\n  routes,\n  scrollBehavior(to, from, savedPosition) {\n    if (savedPosition) {\n      return savedPosition;\n    } else {\n      return {\n        top: 0\n      };\n    }\n  }\n});\n\n// Update page title on route change\nrouter.beforeEach((to, from, next) => {\n  document.title = to.meta.title || 'AlwaysFreeMinds';\n  next();\n});\nexport default router;","map":{"version":3,"names":["createRouter","createWebHistory","Home","routes","path","name","component","meta","title","router","history","process","env","BASE_URL","scrollBehavior","to","from","savedPosition","top","beforeEach","next","document"],"sources":["/home/gregorybarber/buy-mind-insights/src/router/index.js"],"sourcesContent":["import { createRouter, createWebHistory } from 'vue-router'\nimport Home from '../views/Home.vue'\n\nconst routes = [\n  {\n    path: '/',\n    name: 'Home',\n    component: Home,\n    meta: {\n      title: 'AlwaysFreeMinds - Stories of Resilience & Redemption'\n    }\n  },\n  {\n    path: '/blog',\n    name: 'Blog',\n    component: () => import('../views/Blog.vue'),\n    meta: {\n      title: 'Blog - AlwaysFreeMinds'\n    }\n  },\n  {\n    path: '/blog/:slug',\n    name: 'BlogPost',\n    component: () => import('../views/BlogPost.vue'),\n    meta: {\n      title: 'Blog Post - AlwaysFreeMinds'\n    }\n  },\n  {\n    path: '/books',\n    name: 'Books',\n    component: () => import('../views/Books.vue'),\n    meta: {\n      title: 'Books - AlwaysFreeMinds'\n    }\n  },\n  {\n    path: '/consulting',\n    name: 'Consulting',\n    component: () => import('../views/Consulting.vue'),\n    meta: {\n      title: 'Consulting - AlwaysFreeMinds'\n    }\n  },\n  {\n    path: '/about',\n    name: 'About',\n    component: () => import('../views/About.vue'),\n    meta: {\n      title: 'About - AlwaysFreeMinds'\n    }\n  },\n  {\n    path: '/contact',\n    name: 'Contact',\n    component: () => import('../views/Contact.vue'),\n    meta: {\n      title: 'Contact - AlwaysFreeMinds'\n    }\n  },\n  {\n    path: '/:pathMatch(.*)*',\n    name: 'NotFound',\n    component: () => import('../views/NotFound.vue'),\n    meta: {\n      title: 'Page Not Found - AlwaysFreeMinds'\n    }\n  }\n]\n\nconst router = createRouter({\n  history: createWebHistory(process.env.BASE_URL),\n  routes,\n  scrollBehavior(to, from, savedPosition) {\n    if (savedPosition) {\n      return savedPosition\n    } else {\n      return { top: 0 }\n    }\n  }\n})\n\n// Update page title on route change\nrouter.beforeEach((to, from, next) => {\n  document.title = to.meta.title || 'AlwaysFreeMinds'\n  next()\n})\n\nexport default router"],"mappings":"AAAA,SAASA,YAAY,EAAEC,gBAAgB,QAAQ,YAAY;AAC3D,OAAOC,IAAI,MAAM,mBAAmB;AAEpC,MAAMC,MAAM,GAAG,CACb;EACEC,IAAI,EAAE,GAAG;EACTC,IAAI,EAAE,MAAM;EACZC,SAAS,EAAEJ,IAAI;EACfK,IAAI,EAAE;IACJC,KAAK,EAAE;EACT;AACF,CAAC,EACD;EACEJ,IAAI,EAAE,OAAO;EACbC,IAAI,EAAE,MAAM;EACZC,SAAS,EAAEA,CAAA,KAAM,MAAM,CAAC,mBAAmB,CAAC;EAC5CC,IAAI,EAAE;IACJC,KAAK,EAAE;EACT;AACF,CAAC,EACD;EACEJ,IAAI,EAAE,aAAa;EACnBC,IAAI,EAAE,UAAU;EAChBC,SAAS,EAAEA,CAAA,KAAM,MAAM,CAAC,uBAAuB,CAAC;EAChDC,IAAI,EAAE;IACJC,KAAK,EAAE;EACT;AACF,CAAC,EACD;EACEJ,IAAI,EAAE,QAAQ;EACdC,IAAI,EAAE,OAAO;EACbC,SAAS,EAAEA,CAAA,KAAM,MAAM,CAAC,oBAAoB,CAAC;EAC7CC,IAAI,EAAE;IACJC,KAAK,EAAE;EACT;AACF,CAAC,EACD;EACEJ,IAAI,EAAE,aAAa;EACnBC,IAAI,EAAE,YAAY;EAClBC,SAAS,EAAEA,CAAA,KAAM,MAAM,CAAC,yBAAyB,CAAC;EAClDC,IAAI,EAAE;IACJC,KAAK,EAAE;EACT;AACF,CAAC,EACD;EACEJ,IAAI,EAAE,QAAQ;EACdC,IAAI,EAAE,OAAO;EACbC,SAAS,EAAEA,CAAA,KAAM,MAAM,CAAC,oBAAoB,CAAC;EAC7CC,IAAI,EAAE;IACJC,KAAK,EAAE;EACT;AACF,CAAC,EACD;EACEJ,IAAI,EAAE,UAAU;EAChBC,IAAI,EAAE,SAAS;EACfC,SAAS,EAAEA,CAAA,KAAM,MAAM,CAAC,sBAAsB,CAAC;EAC/CC,IAAI,EAAE;IACJC,KAAK,EAAE;EACT;AACF,CAAC,EACD;EACEJ,IAAI,EAAE,kBAAkB;EACxBC,IAAI,EAAE,UAAU;EAChBC,SAAS,EAAEA,CAAA,KAAM,MAAM,CAAC,uBAAuB,CAAC;EAChDC,IAAI,EAAE;IACJC,KAAK,EAAE;EACT;AACF,CAAC,CACF;AAED,MAAMC,MAAM,GAAGT,YAAY,CAAC;EAC1BU,OAAO,EAAET,gBAAgB,CAACU,OAAO,CAACC,GAAG,CAACC,QAAQ,CAAC;EAC/CV,MAAM;EACNW,cAAcA,CAACC,EAAE,EAAEC,IAAI,EAAEC,aAAa,EAAE;IACtC,IAAIA,aAAa,EAAE;MACjB,OAAOA,aAAa;IACtB,CAAC,MAAM;MACL,OAAO;QAAEC,GAAG,EAAE;MAAE,CAAC;IACnB;EACF;AACF,CAAC,CAAC;;AAEF;AACAT,MAAM,CAACU,UAAU,CAAC,CAACJ,EAAE,EAAEC,IAAI,EAAEI,IAAI,KAAK;EACpCC,QAAQ,CAACb,KAAK,GAAGO,EAAE,CAACR,IAAI,CAACC,KAAK,IAAI,iBAAiB;EACnDY,IAAI,CAAC,CAAC;AACR,CAAC,CAAC;AAEF,eAAeX,MAAM","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}